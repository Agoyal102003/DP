// Approach 1 -> Recursive way 

int f(int i, int j, vector<vector<int>>& grid)
    {
        if(i==0 && j==0) return grid[i][j];

        if(i<0 || j<0) return INT_MAX;

        int up = f(i-1, j, grid);
        int left = f(i, j-1, grid);

        return grid[i][j] + min(up, left);
    }

    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n= grid[0].size();
        return f(m-1, n-1, grid);
    }
