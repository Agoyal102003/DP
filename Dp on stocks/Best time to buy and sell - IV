In this trnsactions are allowed K times

// Approach 1 -> Recursive way 

class Solution {
public:
    int f(int index, int buy, int cap, vector<int>& prices)
    {
        if(cap==0) return 0;
        if(index==prices.size()) 
        {
            return 0; 
        }
        int profit=0;

        if(buy==1)
        {
            profit= max(-prices[index] + f(index+1, 0, cap, prices), f(index+1, 1, cap, prices));
        }
        else{
            profit = max(prices[index] + f(index+1, 1, cap-1, prices), f(index+1, 0, cap, prices));
        }
        return profit;
    }

    int maxProfit(int k, vector<int>& prices) {
        return f(0, 1, k, prices);
    }
};

// Approach 2 ->Memoization 

